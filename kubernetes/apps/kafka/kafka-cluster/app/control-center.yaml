---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: control-center
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: confluentinc/cp-enterprise-control-center
              tag: 7.5.0
            env:
              PORT: &port 9021

              CONTROL_CENTER_HOST_NAME:
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              CONTROL_CENTER_BOOTSTRAP_SERVERS: broker-0.broker:29093,broker-1.broker:29093,broker-2.broker:29093
              CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: "connect:8083"
              CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: "/connectors"
              CONTROL_CENTER_SCHEMA_REGISTRY_SR1_URL: http://schema-registry:8081
              CONTROL_CENTER_KSQL_KSQLDB1_URL: http:/ksql:8088
              CONTROL_CENTER_REPLICATION_FACTOR: 1

              CONTROL_CENTER_REST_LISTENERS: http://0.0.0.0:9021

              CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 6
              CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
              CONFLUENT_METRICS_TOPIC_REPLICATION: 1

            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            # resources:
            #   requests:
            #     cpu: 4000m
            #   limits:
            #     memory: 2048Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: main
        ports:
          http:
            port: *port

    # serviceMonitor:
    #   app:
    #     serviceName: "{{ .Release.Name }}"
    #     endpoints:
    #       - port: http
    #         scheme: http
    #         path: /metrics
    #         interval: 1m
    #         scrapeTimeout: 10s
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
